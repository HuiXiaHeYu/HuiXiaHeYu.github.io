{"version":3,"file":"index.js","sources":["../../src/node/rendererFloatingVue.ts","../../src/node/resolveTypeScriptPaths.ts","../../src/node/createTwoslashTransformer.ts","../../src/node/createFileSystemTypesCache.ts"],"sourcesContent":["import type { TwoslashRenderer } from '@shikijs/twoslash/core'\nimport { rendererRich } from '@shikijs/twoslash/core'\nimport type { Element, ElementContent, Text } from 'hast'\nimport { fromMarkdown } from 'mdast-util-from-markdown'\nimport { gfmFromMarkdown } from 'mdast-util-gfm'\nimport { defaultHandlers, toHast } from 'mdast-util-to-hast'\nimport type { ShikiTransformerContextCommon } from 'shiki'\nimport type { TwoslashFloatingVueRendererOptions } from './options.js'\n\nconst addVPreProp = <T extends ElementContent>(el: T): T => {\n  if (el.type === 'element') {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    ;(el.properties ??= {})['v-pre'] = ''\n  }\n  return el\n}\n\nconst compose = (parts: {\n  token: Element | Text\n  popup: Element\n}): Element[] => {\n  return [\n    {\n      type: 'element',\n      tagName: 'span',\n      properties: {},\n      children: [parts.token],\n    },\n    {\n      type: 'element',\n      tagName: 'template',\n      properties: {\n        'v-slot:popper': '{}',\n      },\n      content: {\n        type: 'root',\n        children: [addVPreProp(parts.popup)],\n      },\n      children: [],\n    },\n  ]\n}\n\nfunction renderMarkdown(\n  this: ShikiTransformerContextCommon,\n  md: string,\n): ElementContent[] {\n  const mdast = fromMarkdown(\n    md.replace(/\\{@link ([^}]*)\\}/g, '$1'), // replace jsdoc links\n    { mdastExtensions: [gfmFromMarkdown()] },\n  )\n\n  return (\n    toHast(mdast, {\n      handlers: {\n        code: (state, node: Parameters<typeof defaultHandlers.code>[1]) => {\n          const _node = node as { lang?: string; value: string }\n          const lang = _node.lang ?? ''\n          const { children } = this.codeToHast(_node.value, {\n            ...this.options,\n            transformers: [],\n            lang,\n            structure: _node.value.trim().includes('\\n') ? 'classic' : 'inline',\n          })\n\n          if (lang) {\n            return {\n              type: 'element',\n              tagName: 'div',\n              properties: {\n                'class': `language-${lang}`,\n                'data-ext': lang,\n                'data-title': lang,\n                'data-highlighter': 'shiki',\n                'style':\n                  children[0]?.type === 'element' &&\n                  children[0].tagName === 'pre'\n                    ? children[0].properties.style\n                    : '',\n              },\n              children,\n            } as Element\n          }\n          return defaultHandlers.code(state, node)\n        },\n      },\n    }) as Element\n  ).children\n}\n\nfunction renderMarkdownInline(\n  this: ShikiTransformerContextCommon,\n  md: string,\n  context?: string,\n): ElementContent[] {\n  const str = context === 'tag:param' ? md.replace(/^([\\w$-]+)/, '`$1` ') : md\n  const children = renderMarkdown.call(this, str)\n\n  // return the children (content) of the first paragraph if it's the only one\n  if (\n    children.length === 1 &&\n    children[0].type === 'element' &&\n    children[0].tagName === 'p'\n  )\n    return children[0].children\n\n  return children\n}\n\n/**\n * Create a FloatingVue renderer for twoslash\n *\n * 为 twoslash 创建 FloatingVue 渲染器\n *\n * @param options - Renderer options / 渲染器选项\n *\n * @example\n * ```ts\n * const renderer = rendererFloatingVue({\n *   floatingVue: {\n *     classCopyIgnore: 'vp-copy-ignore',\n *     floatingVueTheme: 'twoslash'\n *   }\n * })\n * ```\n */\nexport const rendererFloatingVue = (\n  options: TwoslashFloatingVueRendererOptions = {},\n): TwoslashRenderer => {\n  const { errorRendering = 'line', floatingVue = {} } = options\n  const {\n    classCopyIgnore = 'vp-copy-ignore',\n    classFloatingPanel = 'twoslash-floating',\n    classCode = 'vp-code',\n    classMarkdown = '',\n    attrMarkdown = 'vp-content',\n    floatingVueTheme = 'twoslash',\n    floatingVueThemeQuery = 'twoslash-query',\n    floatingVueThemeCompletion = 'twoslash-completion',\n  } = floatingVue\n\n  const hoverBasicProps = {\n    'class': 'twoslash-hover',\n    'popper-class': [\n      'shiki',\n      classFloatingPanel,\n      classCopyIgnore,\n      classCode,\n    ].join(' '),\n    'theme': floatingVueTheme,\n  }\n\n  const richRenderer = rendererRich({\n    classExtra: classCopyIgnore,\n    ...options,\n    renderMarkdown,\n    renderMarkdownInline,\n    hast: {\n      hoverToken: {\n        tagName: 'v-menu',\n        properties: hoverBasicProps,\n      },\n      hoverCompose: compose,\n      queryToken: {\n        tagName: 'v-menu',\n        properties: {\n          ...hoverBasicProps,\n          ':shown': 'true',\n          'theme': floatingVueThemeQuery,\n        },\n      },\n      queryCompose: compose,\n      popupDocs: {\n        class: `twoslash-popup-docs ${classMarkdown}`,\n        properties: {\n          [attrMarkdown]: '',\n        },\n      },\n      popupDocsTags: {\n        class: `twoslash-popup-docs twoslash-popup-docs-tags ${classMarkdown}`,\n        properties: {\n          [attrMarkdown]: '',\n        },\n      },\n      popupError: {\n        class: `twoslash-popup-error ${classMarkdown}`,\n        properties: {\n          [attrMarkdown]: '',\n        },\n      },\n      errorToken:\n        errorRendering === 'line'\n          ? undefined\n          : {\n              tagName: 'v-menu',\n              properties: {\n                ...hoverBasicProps,\n                class: 'twoslash-error twoslash-error-hover',\n              },\n            },\n      errorCompose: compose,\n      completionCompose({ popup, cursor }) {\n        return [\n          {\n            type: 'element',\n            tagName: 'v-menu',\n            properties: {\n              'popper-class': [\n                'shiki twoslash-completion',\n                classCopyIgnore,\n                classFloatingPanel,\n              ],\n              'theme': floatingVueThemeCompletion,\n              ':shown': 'true',\n            },\n            children: [\n              cursor,\n              {\n                type: 'element',\n                tagName: 'template',\n                properties: {\n                  'v-slot:popper': '{}',\n                },\n                content: {\n                  type: 'root',\n                  children: [addVPreProp(popup)],\n                },\n              },\n            ],\n          } as Element,\n        ]\n      },\n    },\n  })\n\n  return richRenderer\n}\n","import fs from 'node:fs/promises'\nimport path from 'node:path'\nimport process from 'node:process'\n\n/**\n * TypeScript paths mapping configuration\n *\n * TypeScript 路径映射配置\n */\nexport type TypeScriptPaths = Record<string, string[]>\n\n/**\n * Resolve TypeScript paths from tsconfig.json\n *\n * 从 tsconfig.json 解析 TypeScript 路径\n *\n * @returns The resolved paths configuration or null if not found / 解析的路径配置，如果未找到则返回 null\n *\n * @example\n * ```ts\n * const paths = await resolveTypeScriptPaths()\n * console.log(paths) // { \"@/*\": [\"/src/*\"] }\n * ```\n */\nexport async function resolveTypeScriptPaths(): Promise<TypeScriptPaths | null> {\n  const tsconfigPath = path.join(process.cwd(), 'tsconfig.json')\n\n  try {\n    const tsconfig = JSON.parse(await fs.readFile(tsconfigPath, 'utf-8')) as {\n      compilerOptions?: {\n        paths?: Record<string, string[]>\n        baseUrl?: string\n      }\n    }\n\n    const baseUrl = tsconfig.compilerOptions?.baseUrl\n    const paths = tsconfig.compilerOptions?.paths ?? null\n\n    if (baseUrl && paths) {\n      const dirname = path.join(process.cwd(), baseUrl)\n\n      for (const key in paths) {\n        const value = paths[key]\n\n        paths[key] = Array.isArray(value)\n          ? value.map((v) => path.resolve(dirname, v))\n          : [path.resolve(dirname, value)]\n      }\n    }\n\n    return paths\n  } catch {\n    return null\n  }\n}\n","import process from 'node:process'\nimport {\n  createTransformerFactory,\n  defaultTwoslashOptions,\n} from '@shikijs/twoslash/core'\nimport type { ShikiTransformer } from 'shiki'\nimport type { TwoslashExecuteOptions, TwoslashReturn } from 'twoslash'\nimport { removeTwoslashNotations } from 'twoslash'\nimport { createTwoslasher } from 'twoslash-vue'\nimport { logger } from 'vuepress/utils'\nimport type { ShikiTwoslashOptions } from './options.js'\nimport { rendererFloatingVue } from './rendererFloatingVue.js'\nimport { resolveTypeScriptPaths } from './resolveTypeScriptPaths.js'\n\n/**\n * Create a Shiki transformer for VuePress to enable twoslash integration\n *\n * 为 VuePress 创建启用 twoslash 集成的 Shiki 转换器\n *\n * @param options - Twoslash transformer options / Twoslash 转换器选项\n *\n * @example\n * ```ts\n * const transformer = await createTwoslashTransformer({\n *   explicitTrigger: true,\n *   twoslashOptions: {\n *     compilerOptions: {\n *       lib: [\"es2015\"]\n *     }\n *   }\n * })\n * ```\n */\nexport const createTwoslashTransformer = async (\n  options: ShikiTwoslashOptions = {},\n): Promise<ShikiTransformer> => {\n  // eslint-disable-next-line no-multi-assign\n  const explicitTrigger = (options.explicitTrigger ??= true)\n  // eslint-disable-next-line no-multi-assign\n  const _twoslashOptions = (options.twoslashOptions ??= {})\n\n  const { compilerOptions = {} } = _twoslashOptions\n\n  const twoslashOptions: ShikiTwoslashOptions['twoslashOptions'] = {\n    ...defaultTwoslashOptions(),\n    ..._twoslashOptions,\n    compilerOptions: {\n      baseUrl: process.cwd(),\n      ...compilerOptions,\n      paths: {\n        ...compilerOptions.paths,\n        ...(await resolveTypeScriptPaths()),\n      },\n    },\n  }\n  const shouldThrow =\n    // respect user option\n    options.throws ??\n    // in CI or production mode\n    (process.env.CI || process.env.NODE_ENV === 'production')\n\n  const onError = (error: unknown, code: string): string => {\n    logger.error(\n      `\\n\\n--------\\nTwoslash error in code:\\n--------\\n${code.split(/\\n/g).slice(0, 15).join('\\n').trim()}\\n--------\\n`,\n    )\n\n    if (shouldThrow) {\n      throw error\n    } else {\n      logger.error(error)\n    }\n\n    return removeTwoslashNotations(code)\n  }\n\n  const defaultTwoslashInstance = createTwoslasher(twoslashOptions)\n  const { typesCache } = options\n  let twoslashInstance = defaultTwoslashInstance\n  if (typesCache) {\n    twoslashInstance = ((\n      code: string,\n      extension?: string,\n      opt?: TwoslashExecuteOptions,\n    ): TwoslashReturn => {\n      const cached = typesCache.read(code) // Restore cache\n      if (cached) return cached\n\n      const twoslashResult = defaultTwoslashInstance(code, extension, opt)\n      typesCache.write(code, twoslashResult)\n      return twoslashResult\n    }) as typeof defaultTwoslashInstance\n    twoslashInstance.getCacheMap = defaultTwoslashInstance.getCacheMap\n\n    typesCache.init?.()\n  }\n\n  const twoslashTransformer = createTransformerFactory(twoslashInstance)({\n    langs: ['ts', 'tsx', 'js', 'jsx', 'json', 'vue'],\n    renderer: rendererFloatingVue(options),\n    onShikiError: onError,\n    onTwoslashError: onError,\n    ...options,\n    explicitTrigger,\n    twoslashOptions,\n  })\n\n  const triggerRegExp =\n    explicitTrigger instanceof RegExp ? explicitTrigger : /\\btwoslash\\b/\n\n  return {\n    name: 'vuepress:twoslash',\n\n    ...twoslashTransformer,\n\n    preprocess(code, preprocessOptions) {\n      const { transformers } = preprocessOptions\n\n      if (transformers) {\n        const cleanupIndex = transformers.findIndex(\n          ({ name }) => name === 'vuepress:clean-up',\n        )\n\n        if (cleanupIndex >= 0) transformers.splice(cleanupIndex, 1)\n\n        // Disable v-pre for twoslash, because we need render it with FloatingVue\n        if (\n          !explicitTrigger ||\n          preprocessOptions.meta?.__raw?.match(triggerRegExp)\n        ) {\n          const vPreIndex = transformers.findIndex(\n            ({ name }) => name === 'vuepress:v-pre',\n          )\n\n          if (vPreIndex >= 0) transformers.splice(vPreIndex, 1)\n        }\n      }\n\n      return twoslashTransformer.preprocess!.call(this, code, preprocessOptions)\n    },\n\n    postprocess(html) {\n      return this.meta.twoslash ? html.replace(/\\{/g, '&#123;') : html\n    },\n  }\n}\n","import { existsSync, mkdirSync, readFileSync, writeFileSync } from 'node:fs'\nimport { join } from 'node:path'\nimport type { TwoslashReturn } from 'twoslash'\nimport { hash as createHash } from 'vuepress/utils'\nimport type { TwoslashTypesCache } from './options.js'\n\nexport interface FileSystemTypeResultCacheOptions {\n  /**\n   * The directory to store the cache files\n   *\n   * 存储缓存文件的目录\n   */\n  dir: string\n}\n\n/**\n * Create a file system types cache for twoslash\n *\n * 为 twoslash 创建文件系统类型缓存\n *\n * @param options - Cache options / 缓存选项\n *\n * @example\n * ```ts\n * const cache = createFileSystemTypesCache({\n *   dir: path.join(process.cwd(), '.cache', 'twoslash')\n * })\n * ```\n */\nexport const createFileSystemTypesCache = ({\n  dir,\n}: FileSystemTypeResultCacheOptions): TwoslashTypesCache => ({\n  init() {\n    mkdirSync(dir, { recursive: true })\n  },\n  read(code) {\n    const hash = createHash(code)\n    const filePath = join(dir, `${hash}.json`)\n    if (!existsSync(filePath)) {\n      return null\n    }\n    return JSON.parse(\n      readFileSync(filePath, { encoding: 'utf-8' }),\n    ) as TwoslashReturn\n  },\n  write(code, data) {\n    const hash = createHash(code)\n    const filePath = join(dir, `${hash}.json`)\n    const json = JSON.stringify(data)\n    writeFileSync(filePath, json, { encoding: 'utf-8' })\n  },\n})\n"],"names":["addVPreProp","el","compose","parts","renderMarkdown","md","mdast","fromMarkdown","gfmFromMarkdown","toHast","state","node","_node","lang","children","defaultHandlers","renderMarkdownInline","context","str","rendererFloatingVue","options","errorRendering","floatingVue","classCopyIgnore","classFloatingPanel","classCode","classMarkdown","attrMarkdown","floatingVueTheme","floatingVueThemeQuery","floatingVueThemeCompletion","hoverBasicProps","rendererRich","popup","cursor","resolveTypeScriptPaths","tsconfigPath","path","process","tsconfig","fs","baseUrl","paths","dirname","key","value","v","createTwoslashTransformer","explicitTrigger","_twoslashOptions","compilerOptions","twoslashOptions","defaultTwoslashOptions","shouldThrow","onError","error","code","logger","removeTwoslashNotations","defaultTwoslashInstance","createTwoslasher","typesCache","twoslashInstance","extension","opt","cached","twoslashResult","twoslashTransformer","createTransformerFactory","triggerRegExp","preprocessOptions","transformers","cleanupIndex","name","vPreIndex","html","createFileSystemTypesCache","dir","mkdirSync","hash","createHash","filePath","join","existsSync","readFileSync","data","json","writeFileSync"],"mappings":"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"}