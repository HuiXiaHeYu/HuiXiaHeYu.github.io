import { RendererRichOptions, TransformerTwoslashOptions, TwoslashRenderer } from '@shikijs/twoslash/core';
import { TwoslashReturn } from 'twoslash';
import { VueSpecificOptions } from 'twoslash-vue';
import { ShikiTransformer } from 'shiki';

/**
 * Options for FloatingVue specific configurations
 *
 * FloatingVue 特定配置选项
 */
interface TwoslashFloatingVueOptions {
    /**
     * Class name for copy ignore elements
     *
     * 复制忽略元素的类名
     *
     * @default 'vp-copy-ignore'
     */
    classCopyIgnore?: string;
    /**
     * Class name for floating panel
     *
     * 浮动面板的类名
     *
     * @default 'twoslash-floating'
     */
    classFloatingPanel?: string;
    /**
     * Class name for code elements
     *
     * 代码元素的类名
     *
     * @default 'vp-code'
     */
    classCode?: string;
    /**
     * Class name for markdown elements
     *
     * Markdown 元素的类名
     *
     * @default ''
     */
    classMarkdown?: string;
    /**
     * Attribute name for markdown content
     *
     * Markdown 内容的属性名
     *
     * @default 'vp-content'
     */
    attrMarkdown?: string;
    /**
     * FloatingVue theme for basic popups
     *
     * 基础弹出框的 FloatingVue 主题
     *
     * @default 'twoslash'
     */
    floatingVueTheme?: string;
    /**
     * FloatingVue theme for query popups
     *
     * 查询弹出框的 FloatingVue 主题
     *
     * @default 'twoslash-query'
     */
    floatingVueThemeQuery?: string;
    /**
     * FloatingVue theme for completion popups
     *
     * 自动完成弹出框的 FloatingVue 主题
     *
     * @default 'twoslash-completion'
     */
    floatingVueThemeCompletion?: string;
}
/**
 * Options for twoslash FloatingVue renderer
 *
 * Twoslash FloatingVue 渲染器选项
 */
interface TwoslashFloatingVueRendererOptions extends RendererRichOptions {
    /**
     * Class and themes for floating-vue specific nodes
     *
     * FloatingVue 特定节点的类和主题
     */
    floatingVue?: TwoslashFloatingVueOptions;
}
/**
 * Options for Shiki twoslash integration
 *
 * Shiki twoslash 集成选项
 */
interface ShikiTwoslashOptions extends TransformerTwoslashOptions, TwoslashFloatingVueRendererOptions {
    /**
     * Twoslash options
     *
     * Twoslash 选项
     */
    twoslashOptions?: TransformerTwoslashOptions['twoslashOptions'] & VueSpecificOptions;
    /**
     * Requires adding `twoslash` to the code block explicitly to run twoslash
     *
     * 需要在代码块中显式添加 `twoslash` 来运行 twoslash
     *
     * @default true
     */
    explicitTrigger?: TransformerTwoslashOptions['explicitTrigger'];
    /**
     * The options for caching resolved types
     *
     * 缓存解析类型的选项
     */
    typesCache?: TwoslashTypesCache | false;
}
/**
 * Interface for twoslash types cache
 *
 * Twoslash 类型缓存接口
 */
interface TwoslashTypesCache {
    /**
     * Read cached result
     *
     * 读取缓存结果
     *
     * @param code - Source code / 源代码
     */
    read: (code: string) => TwoslashReturn | null;
    /**
     * Save result to cache
     *
     * 保存结果到缓存
     *
     * @param code - Source code / 源代码
     * @param data - Twoslash data / Twoslash 数据
     */
    write: (code: string, data: TwoslashReturn) => void;
    /**
     * On initialization
     *
     * 初始化时调用
     */
    init?: () => void;
}

/**
 * Create a FloatingVue renderer for twoslash
 *
 * 为 twoslash 创建 FloatingVue 渲染器
 *
 * @param options - Renderer options / 渲染器选项
 *
 * @example
 * ```ts
 * const renderer = rendererFloatingVue({
 *   floatingVue: {
 *     classCopyIgnore: 'vp-copy-ignore',
 *     floatingVueTheme: 'twoslash'
 *   }
 * })
 * ```
 */
declare const rendererFloatingVue: (options?: TwoslashFloatingVueRendererOptions) => TwoslashRenderer;

/**
 * TypeScript paths mapping configuration
 *
 * TypeScript 路径映射配置
 */
type TypeScriptPaths = Record<string, string[]>;
/**
 * Resolve TypeScript paths from tsconfig.json
 *
 * 从 tsconfig.json 解析 TypeScript 路径
 *
 * @returns The resolved paths configuration or null if not found / 解析的路径配置，如果未找到则返回 null
 *
 * @example
 * ```ts
 * const paths = await resolveTypeScriptPaths()
 * console.log(paths) // { "@/*": ["/src/*"] }
 * ```
 */
declare function resolveTypeScriptPaths(): Promise<TypeScriptPaths | null>;

/**
 * Create a Shiki transformer for VuePress to enable twoslash integration
 *
 * 为 VuePress 创建启用 twoslash 集成的 Shiki 转换器
 *
 * @param options - Twoslash transformer options / Twoslash 转换器选项
 *
 * @example
 * ```ts
 * const transformer = await createTwoslashTransformer({
 *   explicitTrigger: true,
 *   twoslashOptions: {
 *     compilerOptions: {
 *       lib: ["es2015"]
 *     }
 *   }
 * })
 * ```
 */
declare const createTwoslashTransformer: (options?: ShikiTwoslashOptions) => Promise<ShikiTransformer>;

interface FileSystemTypeResultCacheOptions {
    /**
     * The directory to store the cache files
     *
     * 存储缓存文件的目录
     */
    dir: string;
}
/**
 * Create a file system types cache for twoslash
 *
 * 为 twoslash 创建文件系统类型缓存
 *
 * @param options - Cache options / 缓存选项
 *
 * @example
 * ```ts
 * const cache = createFileSystemTypesCache({
 *   dir: path.join(process.cwd(), '.cache', 'twoslash')
 * })
 * ```
 */
declare const createFileSystemTypesCache: ({ dir, }: FileSystemTypeResultCacheOptions) => TwoslashTypesCache;

export { createFileSystemTypesCache, createTwoslashTransformer, rendererFloatingVue, resolveTypeScriptPaths };
export type { FileSystemTypeResultCacheOptions, ShikiTwoslashOptions, TwoslashFloatingVueOptions, TwoslashFloatingVueRendererOptions, TwoslashTypesCache, TypeScriptPaths };
